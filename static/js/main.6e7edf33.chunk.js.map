{"version":3,"sources":["components/Header.js","components/CardInstructions.js","components/Card.js","containers/CommunalContainer.js","components/AreaButton.js","containers/TableContainer.js","components/OddsDisplay.js","helpers/pokerCalculator.js","helpers/areaData.js","featureVector.js","App.js","helpers/cardData.js","serviceWorker.js","index.js"],"names":["Header","CardInstructions","areaName","Card","card","name","code","disable","clickHandler","className","src","alt","onClick","undefined","CommunalContainer","communalCards","addCard","useState","leftClass","setLeftClass","rightClass","setRightClass","lastScrollPosition","setlastScrollPosition","scrollRef","useRef","current","scrollLeft","ref","onScroll","e","target","scrollWidth","offsetWidth","divWidth","clientLeft","map","key","AreaButton","selectedKey","areaKey","handleClick","disabled","TableContainer","cards","setSelectedKey","removeCard","OddsDisplay","odds","enable","resetTable","calculateAction","JSON","stringify","getGroup","CardGroup","fromString","join","getString","calculateOdds","player1","table","player2","myHand","communityCards","suits","ranks","pokerfaceHand","pokerfaceCommunity","i","length","push","rank","suit","j","console","log","hand","community","areas","limit","areaKeys","Object","keys","Features","holeCards","pot","amountToPlay","previousBet","lastAction","stack","position","this","initialState","App","state","setState","bigBlind","setPosition","selectedCards","filter","flat","includes","tableProps","selectedCard","currentArea","potSize","setPotSize","stackSize","setStackSize","setPreviousBet","setLastAction","setAmountToPlay","getAction","url","data","a","fetch","method","headers","Accept","body","newData","modelPosition","vector","then","res","json","alert","props","renderTableAreas","Button","TextField","label","onSubmit","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"sTAWeA,G,MATA,kBACb,oCACE,8DACA,oKCKWC,EARU,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACvB,qEAC0CA,EAD1C,iICQaC,EATF,SAAC,GAAD,QAAGC,KAAQC,EAAX,EAAWA,KAAMC,EAAjB,EAAiBA,KAAQC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,aAAlC,OACX,yBACEC,UAAU,aACVC,IAAG,qBAAgBJ,EAAhB,QACHK,IAAKN,EACLO,QAASL,OAAUM,EAAYL,KCyDpBM,EA7DW,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,cAAeR,EAAuB,EAAvBA,QAASS,EAAc,EAAdA,QAAc,EAC/BC,mBAAS,UADsB,mBAC1DC,EAD0D,KAC/CC,EAD+C,OAE7BF,qBAF6B,mBAE1DG,EAF0D,KAE9CC,EAF8C,OAGbJ,mBAAS,GAHI,mBAG1DK,EAH0D,KAGtCC,EAHsC,KAK3DC,EAAYC,mBAiBlB,OACE,yBAAKhB,UAAU,oBACb,yBAAKA,UAAU,mBACb,uBAAGA,UAAS,UAAKS,EAAL,iBAAZ,SAEE,yBACET,UAAU,YACVE,IAAI,aACJD,IAAI,sBACJE,QAba,kBAAOY,EAAUE,QAAQC,YAAc,QAgBxD,uBAAGlB,UAAS,UAAKW,EAAL,iBAAZ,SAEE,yBACEX,UAAU,YACVE,IAAI,cACJD,IAAI,uBACJE,QAxBa,kBAAOY,EAAUE,QAAQC,YAAc,SA4B1D,yBACEC,IAAKJ,EACLK,SAAUtB,EA1BM,SAAAuB,GAAC,OAAKA,EAAEC,OAAOJ,WAAaL,GAb7B,SAAC,GAEf,IAAD,IADJS,OAAUJ,EACN,EADMA,WAAYK,EAClB,EADkBA,YAAaC,EAC/B,EAD+BA,YAE7BC,EAAWF,EAA2B,EADxC,EAD4CG,WAEAF,EAChDd,EAA4B,IAAfQ,GAAoB,UACjCN,EAAcM,IAAeO,GAAY,UACzCX,EAAsBI,IAkClBlB,UAAU,sBAETM,EAAcqB,KAAI,SAAAhC,GAAI,OACrB,kBAAC,EAAD,eACEiC,IAAKjC,EAAKC,KACVG,aAAc,kBAAMQ,EAAQZ,KACxB,CAAEG,UAASH,gBCtCZkC,EAhBI,SAAC,GAAD,IACjBC,EADiB,EACjBA,YACAC,EAFiB,EAEjBA,QACAtC,EAHiB,EAGjBA,SACAK,EAJiB,EAIjBA,QACAkC,EALiB,EAKjBA,YALiB,OAOjB,4BACEhC,UAAW8B,IAAgBC,GAAW,kBACtCE,SAAUnC,EACVK,QAAS6B,GAHX,UAKMF,IAAgBC,EAAU,YAAc,GAL9C,YAKoDtC,EALpD,YC8BayC,EAnCQ,SAAC,GAAD,IACrBC,EADqB,EACrBA,MACAL,EAFqB,EAErBA,YACAC,EAHqB,EAGrBA,QACAtC,EAJqB,EAIrBA,SACAK,EALqB,EAKrBA,QACAsC,EANqB,EAMrBA,eACAC,EAPqB,EAOrBA,WAPqB,OASrB,yBACErC,UAAS,gCACP8B,IAAgBC,GAAW,kBAG7B,kBAAC,EAAD,eACEC,YAAa,kBAAMI,EAAeL,KAC9B,CACFD,cACAC,UACAtC,WACAK,aAGJ,6BACGqC,EAAMR,KAAI,SAAAhC,GAAI,OACb,kBAAC,EAAD,eACEiC,IAAKjC,EAAKC,KACVG,aAAc,kBAAMsC,EAAW1C,EAAMoC,KACjC,CAAEtC,WAAUK,UAASH,gBCJpB2C,EA1BK,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,OAAQC,EAAjB,EAAiBA,WAAYC,EAA7B,EAA6BA,gBAA7B,OAClB,yBAAK1C,UAAU,kBACb,2BACGuC,EACG,2DACA,kHAEN,4BACEvC,UAAWwC,EAAS,kBAAoB,UACxCP,UAAWO,EACXrC,QAASoC,EAAOE,EAAaC,GAE5BH,EAAO,cAAgB,kBAE1B,yBAAKvC,UAAU,qBACZuC,EACC,oCACE,uCAAaI,KAAKC,UAAUL,KAG9B,6D,QClBFM,EAAW,SAAAV,GAAK,OAAIW,YAAUC,WAFlB,SAAAZ,GAAK,OAAIA,EAAMR,KAAI,SAAAhC,GAAI,OAAIA,EAAKE,QAAMmD,KAAK,IAEdC,CAAUd,KAkC1Ce,EAhCO,SAACC,EAASC,EAAOC,GAQrC,IAPA,IAAMC,EAAST,EAASM,GAClBI,EAAiBV,EAASO,GAE1BI,EAAQ,CAAC,IAAK,IAAK,IAAK,KACxBC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAAK,IAAK,IAAK,IAAK,KACxDC,EAAgB,GAChBC,EAAqB,GAClBC,EAAI,EAAGA,EAAIN,EAAOO,SAAUD,EACnCF,EAAcI,KAAKL,EAAMH,EAAOM,GAAGG,KAAO,GAAKP,EAAMF,EAAOM,GAAGI,KAAO,IAKxE,IAAK,IAAIC,EAAI,EAAGA,EAAIV,EAAeM,SAAUI,EAC3CN,EAAmBG,KAAKL,EAAMF,EAAeU,GAAGF,KAAO,GAAKP,EAAMD,EAAeU,GAAGD,KAAO,IAK7F,OAFAE,QAAQC,IAAIR,GACZO,QAAQC,IAAIT,GACL,CAACU,KAAMV,EAAeW,UAAWV,IC1BpCW,EAAQ,CACVnB,QAAS,CAAC1D,SAAU,WAAY0C,MAAO,GAAIoC,MAAO,GAClDnB,MAAO,CAAC3D,SAAU,QAAS0C,MAAO,GAAIoC,MAAO,IAG3CC,EAAWC,OAAOC,KAAKJ,G,wBCQdK,EAZX,WAAYpB,EAAgBqB,EAAWC,EAAKC,EAAcC,EAAaC,EAAYC,EAAOC,GAAW,oBACjGC,KAAK5B,eAAiBA,EACtB4B,KAAKP,UAAYA,EACjBO,KAAKN,IAAMA,EACXM,KAAKL,aAAcA,EACnBK,KAAKJ,YAAcA,EACnBI,KAAKH,WAAaA,EAClBG,KAAKF,MAAQA,EACbE,KAAKD,SAAWA,G,yjBCKxB,IAAME,EAAY,GAChBjD,MCfa,CACb,CAAEvC,KAAM,eAAgBC,KAAM,MAC9B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,cAAeC,KAAM,MAC7B,CAAED,KAAM,gBAAiBC,KAAM,MAC/B,CAAED,KAAM,iBAAkBC,KAAM,MAChC,CAAED,KAAM,gBAAiBC,KAAM,MAC/B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,YAAaC,KAAM,MAC3B,CAAED,KAAM,cAAeC,KAAM,MAC7B,CAAED,KAAM,eAAgBC,KAAM,MAC9B,CAAED,KAAM,cAAeC,KAAM,MAC7B,CAAED,KAAM,YAAaC,KAAM,MAC3B,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,UAAWC,KAAM,MACzB,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,cAAeC,KAAM,MAC7B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,aAAcC,KAAM,MAC5B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,WAAYC,KAAM,MAC1B,CAAED,KAAM,YAAaC,KAAM,MAC3B,CAAED,KAAM,cAAeC,KAAM,MAC7B,CAAED,KAAM,eAAgBC,KAAM,MAC9B,CAAED,KAAM,cAAeC,KAAM,QDpC1ByE,EAFa,CAGhBxC,YAAa0C,EAAS,GACtBjC,KAAM,OA8KO8C,EA3KH,WAAO,IAAD,EACU7E,mBAAS4E,GADnB,mBACTE,EADS,KACFC,EADE,OAEgB/E,oBAAS,GAFzB,mBAETgF,EAFS,KAECC,EAFD,KAGRtD,EAA6BmD,EAA7BnD,MAAOL,EAAsBwD,EAAtBxD,YAAaS,EAAS+C,EAAT/C,KAEtBmD,EAAgB,8BAAUlB,EAAS7C,KAAI,SAAAC,GAAG,OAAI0D,EAAM1D,GAAKO,WAmDvD1C,EAAa6F,EAAMxD,GAAnBrC,SAEFa,EAlDJ6B,EAAMwD,QAAO,SAAAhG,GAAI,OAAK+F,IAAgBE,OAAOC,SAASlG,MAoDlD6C,EAvByBkD,IAAgBE,OAAO/B,QAAU,EAyB1D/D,IAhBqByC,EAkBrBuD,EAAa,CAAEhG,UAASuC,WAxCX,SAAC0D,EAAchE,GAChC,IAAIiE,EAAcV,EAAMvD,GACxBwD,EAAS,EAAD,GACHD,EADG,eAELvD,EAFK,KAGDiE,EAHC,CAIJ7D,MAAO6D,EAAY7D,MAAMwD,QAAO,SAAAhG,GAAI,OAAIA,IAASoG,WAkCb3D,eA7BnB,SAAAN,GAAW,OAAIyD,EAAS,EAAD,GAAMD,EAAN,CAAaxD,kBA6BDA,eAhE1C,EA4EctB,mBAAS,GA5EvB,mBA4ETyF,EA5ES,KA4EAC,EA5EA,OA8EkB1F,mBAAS,GA9E3B,mBA8ET2F,EA9ES,KA8EEC,EA9EF,OAgFsB5F,mBAAS,GAhF/B,mBAgFTuE,EAhFS,KAgFIsB,EAhFJ,OAoFoB7F,mBAAS,GApF7B,mBAoFTwE,EApFS,KAoFGsB,EApFH,OAwFwB9F,mBAAS,GAxFjC,mBAwFTsE,GAxFS,KAwFKyB,GAxFL,KA0FVrB,GAAYM,EAAY,YAAc,cAEtCgB,GAAS,uCAAG,WAAOC,EAAKC,GAAZ,eAAAC,EAAA,6DAChBzC,QAAQC,IAAI,mBACZD,QAAQC,IAAIxB,KAAKC,UAAU8D,IAFX,SAGME,MAAMH,EAAK,CAC/BI,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChBC,OAAQ,oBAEVC,KAAMrE,KAAKC,UAAU8D,KATP,cAGVO,EAHU,yBAWTA,GAXS,2CAAH,wDAqBTvE,GAAe,uCAAG,sCAAAiE,EAAA,6DAChBxE,EAAQe,EAAa,WAAb,cAAiBwC,MACzBtB,EAAOjC,EAAMiC,KACbC,EAAYlC,EAAMkC,UACpB6C,GAAiB,EACjB1B,IACF0B,GAAiB,IAEbC,EAAS,IAAIxC,EAASN,EAAWD,EAAM6B,EAASnB,GAAcC,EAAaC,EAAYmB,EAAWe,GARlF,SASHV,GAAU,IAAKW,GAAQC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAAQ,SAAAD,GAAG,OAAInD,QAAQC,IAAR,sBAA2BkD,OAT9E,OAShB9E,EATgB,OAUtB2B,QAAQC,IAAI5B,GACZgD,EAAS,EAAD,GAAMD,EAAN,CAAa/C,UAXC,4CAAH,qDAcrB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,EAAsB,CAAEjC,gBAAeR,UAASS,QAxHrC,SAAAwF,GACd,IAAIC,EAAcV,EAAMxD,GACxB,GAAIkE,EAAY7D,MAAM0B,OAASmC,EAAYzB,MACzC,OAAOgB,EAAS,EAAD,GACVD,EADU,eAEZxD,EAFY,KAGRkE,EAHQ,CAIX7D,MAAM,GAAD,mBAAM6D,EAAY7D,OAAlB,CAAyB4D,SAIpCwB,MAAM,iDA8GJ,kBAAC,EAAqB,CAAE9H,aACxB,yBAAKO,UAAU,oBApFM,SAAC0E,GAAD,IAAO8C,EAAP,uDAAe,GAAf,OACvB9C,EAAK/C,KAAI,SAAAC,GAAQ,IAAD,EACc0D,EAAM1D,GAA1BO,EADM,EACNA,MAAO1C,EADD,EACCA,SACf,OACE,kBAAC,EAAD,eAAgBsC,QAASH,GAAzB,GAAoCA,MAAKO,QAAO1C,YAAa+H,QAiF5DC,CAAiBjD,EAAUsB,IAE9B,6BACE,kBAAC4B,EAAA,EAAD,CAAQvH,QA9DE,kBAAMsF,GAAaD,KA8D7B,aAAqCN,KAEvC,6BACE,kBAACwC,EAAA,EAAD,CAAQvH,QArDa,kBAAMmG,GAAetB,EAAa,GAAG,KAqD1D,gBAzDa,CAAC,aAAc,eAAgB,QAAS,OAAQ,OAAQ,eAAgB,YAAa,iBAyDpCA,KAEhE,6BACA,kBAAC2C,EAAA,EAAD,CACIC,MAAM,2BACNC,SAAU,SAACxG,GAAD,OAAO6E,EAAW7E,OAGhC,6BACA,kBAACsG,EAAA,EAAD,CACIC,MAAM,uBACNC,SAAU,SAACxG,GAAD,OAAOkF,GAAgBlF,OAGrC,6BACA,kBAACsG,EAAA,EAAD,CACIC,MAAM,mBACNC,SAAU,SAACxG,GAAD,OAAO+E,EAAa/E,OAGlC,6BACA,kBAACsG,EAAA,EAAD,CACIC,MAAM,qBACNC,SAAU,SAACxG,GAAD,OAAOgF,EAAehF,OAIpC,kBAAC,EAAgB,CAAEmB,SAAQE,mBAAiBD,WA1H7B,kBAAM8C,EAASH,IA0H0B7C,WE/K1CuF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMrB,MAAK,SAAAsB,GACjCA,EAAaC,kB","file":"static/js/main.6e7edf33.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nconst Header = () => (\r\n  <>\r\n    <h1>Daniel Poker Action Calculator</h1>\r\n    <p>\r\n      Select yours and your opponents cards, select the table cards, pop in some other values and see what I would do in that situation.\r\n    </p>\r\n  </>\r\n)\r\n\r\nexport default Header\r\n","import React from \"react\"\r\n\r\nconst CardInstructions = ({ areaName }) => (\r\n  <p>\r\n    Click on a card above to add it to the {areaName} area. To add one to a\r\n    different area, select it using the buttons below. To remove a card from an\r\n    area, simply click on it!\r\n  </p>\r\n)\r\n\r\nexport default CardInstructions\r\n","import React from \"react\"\r\n\r\nconst Card = ({ card: { name, code }, disable, clickHandler }) => (\r\n  <img\r\n    className=\"small-card\"\r\n    src={`imgs/cards/${code}.png`}\r\n    alt={name}\r\n    onClick={disable ? undefined : clickHandler}\r\n  />\r\n)\r\n\r\nexport default Card\r\n","import React, { useState, useRef } from \"react\"\r\nimport Card from \"../components/Card\"\r\n\r\nconst CommunalContainer = ({ communalCards, disable, addCard }) => {\r\n  const [leftClass, setLeftClass] = useState(\"hidden\")\r\n  const [rightClass, setRightClass] = useState()\r\n  const [lastScrollPosition, setlastScrollPosition] = useState(0)\r\n\r\n  const scrollRef = useRef()\r\n\r\n  const handleScroll = ({\r\n    target: { scrollLeft, scrollWidth, offsetWidth, clientLeft },\r\n  }) => {\r\n    const divWidth = scrollWidth + clientLeft * 2 - offsetWidth\r\n    setLeftClass(scrollLeft === 0 && \"hidden\")\r\n    setRightClass(scrollLeft === divWidth && \"hidden\")\r\n    setlastScrollPosition(scrollLeft)\r\n  }\r\n\r\n  const increaseScroll = () => (scrollRef.current.scrollLeft += 500)\r\n\r\n  const decreaseScroll = () => (scrollRef.current.scrollLeft -= 500)\r\n\r\n  const disableScroll = e => (e.target.scrollLeft = lastScrollPosition)\r\n\r\n  return (\r\n    <div className=\"scroll-container\">\r\n      <div className=\"arrow-container\">\r\n        <p className={`${leftClass} left arrow `}>\r\n          Scroll\r\n          <img\r\n            className=\"arrow-img\"\r\n            alt=\"left arrow\"\r\n            src=\"imgs/arrow-left.png\"\r\n            onClick={decreaseScroll}\r\n          ></img>\r\n        </p>\r\n        <p className={`${rightClass} right arrow`}>\r\n          Scroll\r\n          <img\r\n            className=\"arrow-img\"\r\n            alt=\"right arrow\"\r\n            src=\"imgs/arrow-right.png\"\r\n            onClick={increaseScroll}\r\n          ></img>\r\n        </p>\r\n      </div>\r\n      <div\r\n        ref={scrollRef}\r\n        onScroll={disable ? disableScroll : handleScroll}\r\n        className=\"communal-container\"\r\n      >\r\n        {communalCards.map(card => (\r\n          <Card\r\n            key={card.name}\r\n            clickHandler={() => addCard(card)}\r\n            {...{ disable, card }}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CommunalContainer\r\n","import React from \"react\"\r\n\r\nconst AreaButton = ({\r\n  selectedKey,\r\n  areaKey,\r\n  areaName,\r\n  disable,\r\n  handleClick,\r\n}) => (\r\n  <button\r\n    className={selectedKey === areaKey && \"selected-button\"}\r\n    disabled={disable}\r\n    onClick={handleClick}\r\n  >\r\n    {`${selectedKey === areaKey ? \"Adding to\" : \"\"} ${areaName} Cards`}\r\n  </button>\r\n)\r\n\r\nexport default AreaButton\r\n","import React from \"react\"\r\nimport Card from \"../components/Card\"\r\nimport AreaButton from \"../components/AreaButton\"\r\n\r\nconst TableContainer = ({\r\n  cards,\r\n  selectedKey,\r\n  areaKey,\r\n  areaName,\r\n  disable,\r\n  setSelectedKey,\r\n  removeCard,\r\n}) => (\r\n  <div\r\n    className={`table-card-containers ${\r\n      selectedKey === areaKey && \"selected-area\"\r\n    }`}\r\n  >\r\n    <AreaButton\r\n      handleClick={() => setSelectedKey(areaKey)}\r\n      {...{\r\n        selectedKey,\r\n        areaKey,\r\n        areaName,\r\n        disable,\r\n      }}\r\n    />\r\n    <div>\r\n      {cards.map(card => (\r\n        <Card\r\n          key={card.name}\r\n          clickHandler={() => removeCard(card, areaKey)}\r\n          {...{ areaName, disable, card }}\r\n        />\r\n      ))}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default TableContainer\r\n","import React from \"react\"\r\n\r\nconst OddsDisplay = ({ odds, enable, resetTable, calculateAction }) => (\r\n  <div className=\"odds-container\">\r\n    <p>\r\n      {odds\r\n        ? \"To calculate new action, click Reset to clear the table.\"\r\n        : \"Once you have selected at least your hole cards, click Calculate to see what I would do! Takes a little (~20s)\"}\r\n    </p>\r\n    <button\r\n      className={enable ? \"selected-button\" : \"disable\"}\r\n      disabled={!enable}\r\n      onClick={odds ? resetTable : calculateAction}\r\n    >\r\n      {odds ? \"Reset Table\" : \"Calculate Odds\"}\r\n    </button>\r\n    <div className=\"results-container\">\r\n      {odds ? (\r\n        <>\r\n          <p>I would: {JSON.stringify(odds)}</p>\r\n        </>\r\n      ) : (\r\n        <p>Results will appear here...</p>\r\n      )}\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default OddsDisplay\r\n","import { CardGroup, OddsCalculator } from \"poker-odds-calculator\"\r\n\r\nconst getString = cards => cards.map(card => card.code).join(\"\")\r\n\r\nconst getGroup = cards => CardGroup.fromString(getString(cards))\r\n\r\nconst calculateOdds = (player1, table, player2) => {\r\n  const myHand = getGroup(player1)\r\n  const communityCards = getGroup(table)\r\n  // clubs are 1, diamonds 2, hearts are 3 , spades 4\r\n  const suits = ['c', 'd', 'h', 's']\r\n  const ranks = [1, 2, 3, 4, 5, 6, 7, 8, 9, 'T', 'J', 'Q', 'K', 'A']\r\n  const pokerfaceHand = []\r\n  const pokerfaceCommunity = []\r\n  for (var i = 0; i < myHand.length; ++i) {\r\n    pokerfaceHand.push(ranks[myHand[i].rank - 1] + suits[myHand[i].suit - 1])\r\n  }\r\n\r\n  \r\n\r\n  for (var j = 0; j < communityCards.length; ++j) {\r\n    pokerfaceCommunity.push(ranks[communityCards[j].rank - 1] + suits[communityCards[j].suit - 1])\r\n  }\r\n\r\n  console.log(pokerfaceCommunity)\r\n  console.log(pokerfaceHand)\r\n  return({hand: pokerfaceHand, community: pokerfaceCommunity})\r\n\r\n\r\n  // const { equities } = OddsCalculator.calculate(...groups)\r\n\r\n  // const [p1, p2] = equities.map(equity => equity.getEquity())\r\n\r\n  // const tie = 100 - p1 - p2\r\n\r\n  // return { p1, p2, tie }\r\n}\r\n\r\nexport default calculateOdds\r\n","const areas = {\r\n    player1: {areaName: \"Player 1\", cards: [], limit: 2},\r\n    table: {areaName: \"Table\", cards: [], limit: 3},\r\n  }\r\n  \r\nconst areaKeys = Object.keys(areas)\r\n\r\nexport { areas, areaKeys }","class Features {\r\n    constructor(communityCards, holeCards, pot, amountToPlay, previousBet, lastAction, stack, position) {\r\n        this.communityCards = communityCards\r\n        this.holeCards = holeCards\r\n        this.pot = pot\r\n        this.amountToPlay= amountToPlay\r\n        this.previousBet = previousBet\r\n        this.lastAction = lastAction\r\n        this.stack = stack\r\n        this.position = position\r\n    }\r\n}\r\n\r\nexport default Features","import React, { useState, useEffect } from \"react\"\r\nimport \"./App.css\"\r\nimport Header from \"./components/Header\"\r\nimport CardInstructions from \"./components/CardInstructions\"\r\nimport CommunalContainer from \"./containers/CommunalContainer\"\r\nimport TableContainer from \"./containers/TableContainer\"\r\nimport OddsDisplay from \"./components/OddsDisplay\"\r\nimport cards from \"./helpers/cardData\"\r\nimport calculateOdds from \"./helpers/pokerCalculator\"\r\nimport { areas, areaKeys } from \"./helpers/areaData\"\r\nimport Button from 'react-bootstrap/Button'\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport Features from \"./featureVector\"\r\n\r\nconst initialState = {\r\n  cards,\r\n  ...areas,\r\n  selectedKey: areaKeys[0],\r\n  odds: null,\r\n}\r\n\r\nconst App = () => {\r\n  const [state, setState] = useState(initialState)\r\n  const [bigBlind, setPosition] = useState(false)\r\n  const { cards, selectedKey, odds } = state\r\n\r\n  const selectedCards = () => [...areaKeys.map(key => state[key].cards)]\r\n\r\n  const availableCards = () =>\r\n    cards.filter(card => !selectedCards().flat().includes(card))\r\n\r\n  const addCard = selectedCard => {\r\n    let currentArea = state[selectedKey]\r\n    if (currentArea.cards.length < currentArea.limit) {\r\n      return setState({\r\n        ...state,\r\n        [selectedKey]: {\r\n          ...currentArea,\r\n          cards: [...currentArea.cards, selectedCard],\r\n        },\r\n      })\r\n    }\r\n    alert(\"You can't add any more cards to this area!\")\r\n  }\r\n\r\n  const removeCard = (selectedCard, areaKey) => {\r\n    let currentArea = state[areaKey]\r\n    setState({\r\n      ...state,\r\n      [areaKey]: {\r\n        ...currentArea,\r\n        cards: currentArea.cards.filter(card => card !== selectedCard),\r\n      },\r\n    })\r\n  }\r\n\r\n  const setSelectedKey = selectedKey => setState({ ...state, selectedKey })\r\n\r\n  const enableCalcButton = () => selectedCards().flat().length >= 2\r\n\r\n  const getAndShowOdds = () => {\r\n    const odds = calculateOdds(...selectedCards())\r\n    setState({ ...state, odds })\r\n  }\r\n\r\n  const resetTable = () => setState(initialState)\r\n\r\n  const disableApp = () => !!odds\r\n\r\n  const renderTableAreas = (keys, props = {}) =>\r\n    keys.map(key => {\r\n      const { cards, areaName } = state[key]\r\n      return (\r\n        <TableContainer areaKey={key} {...{ key, cards, areaName, ...props }} />\r\n      )\r\n    })\r\n\r\n  const { areaName } = state[selectedKey]\r\n\r\n  const communalCards = availableCards()\r\n\r\n  const enable = enableCalcButton()\r\n\r\n  const disable = disableApp()\r\n\r\n  const tableProps = { disable, removeCard, setSelectedKey, selectedKey }\r\n\r\n  // const getString = cards => cards.map(card => card.code).join(\"\")\r\n\r\n  // const getGroup = cards => CardGroup.fromString(getString(cards))\r\n\r\n  // const calculateOddsTest = (player1, table, player2) => {\r\n  //   const groups = [[getGroup(player1), getGroup(player2)], getGroup(table)]\r\n  //   console.log(groups)\r\n  // }\r\n  const onClick = () => setPosition(!bigBlind)\r\n\r\n  const [potSize, setPotSize] = useState(0)\r\n\r\n  const [stackSize, setStackSize] = useState(0)\r\n\r\n  const [previousBet, setPreviousBet] = useState(0)\r\n  // const onPotUpdate = (value) => setPotSize(value)\r\n  const actionList = ['Posted Big', 'Posted Small', 'Check', 'Call', 'Fold', 'Raise all in', 'Raise pot', 'Raise 1/3 pot']\r\n  \r\n  const [lastAction, setLastAction] = useState(0)\r\n\r\n  const onChangeLastAction = () => setLastAction((lastAction + 1)%8)\r\n\r\n  const [amountToPlay, setAmountToPlay] = useState(0)\r\n\r\n  const position = (bigBlind) ? 'Big Blind' : 'Small Blind'\r\n\r\n  const getAction = async (url, data) => {\r\n    console.log('Sending request')\r\n    console.log(JSON.stringify(data))\r\n    const newData = await fetch(url, { \r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Accept: 'application/json'\r\n      },\r\n      body: JSON.stringify(data)\r\n    })\r\n    return newData\r\n  }\r\n  \r\n  const testGet = async (value) => {\r\n    const vector = new Features([], ['2h', '2d'], 100, 10, 10, 'Posted big', 1000, 1)\r\n    console.log('here')\r\n    console.log(vector.position)\r\n    getAction('/', vector)\r\n  }\r\n\r\n  const calculateAction = async () => {\r\n    const cards = calculateOdds(...selectedCards())\r\n    const hand = cards.hand\r\n    const community = cards.community\r\n    var modelPosition = -9\r\n    if (bigBlind) {\r\n      modelPosition = -10\r\n    }\r\n    const vector = new Features(community, hand, potSize, amountToPlay, previousBet, lastAction, stackSize, modelPosition)\r\n    const odds = await getAction('/', vector).then(res => res.json(), res => console.log(`req failed: ${res}`))\r\n    console.log(odds)\r\n    setState({ ...state, odds })\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <CommunalContainer {...{ communalCards, disable, addCard }} />\r\n      <CardInstructions {...{ areaName }} />\r\n      <div className=\"table-containers\">\r\n        {renderTableAreas(areaKeys, tableProps)}\r\n      </div>\r\n      <div>\r\n        <Button onClick={onClick}>Position: {position}</Button>\r\n      </div>\r\n      <div>\r\n        <Button onClick={onChangeLastAction}>Last action: {actionList[lastAction]}</Button>\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"Enter pot size (pre bet)\"\r\n          onSubmit={(e) => setPotSize(e)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"Enter amount to play\"\r\n          onSubmit={(e) => setAmountToPlay(e)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"Enter stack size\"\r\n          onSubmit={(e) => setStackSize(e)}\r\n        />\r\n      </div>\r\n      <div>\r\n      <TextField\r\n          label=\"Enter previous bet\"\r\n          onSubmit={(e) => setPreviousBet(e)}\r\n        />\r\n      </div>\r\n      \r\n      <OddsDisplay {...{ enable, calculateAction, resetTable, odds }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","export default [\r\n  { name: \"Ace Diamonds\", code: \"Ad\" },\r\n  { name: \"2 Diamonds\", code: \"2d\" },\r\n  { name: \"3 Diamonds\", code: \"3d\" },\r\n  { name: \"4 Diamonds\", code: \"4d\" },\r\n  { name: \"5 Diamonds\", code: \"5d\" },\r\n  { name: \"6 Diamonds\", code: \"6d\" },\r\n  { name: \"7 Diamonds\", code: \"7d\" },\r\n  { name: \"8 Diamonds\", code: \"8d\" },\r\n  { name: \"9 Diamonds\", code: \"9d\" },\r\n  { name: \"10 Diamonds\", code: \"Td\" },\r\n  { name: \"Jack Diamonds\", code: \"Jd\" },\r\n  { name: \"Queen Diamonds\", code: \"Qd\" },\r\n  { name: \"King Diamonds\", code: \"Kd\" },\r\n  { name: \"Ace Hearts\", code: \"Ah\" },\r\n  { name: \"2 Hearts\", code: \"2h\" },\r\n  { name: \"3 Hearts\", code: \"3h\" },\r\n  { name: \"4 Hearts\", code: \"4h\" },\r\n  { name: \"5 Hearts\", code: \"5h\" },\r\n  { name: \"6 Hearts\", code: \"6h\" },\r\n  { name: \"7 Hearts\", code: \"7h\" },\r\n  { name: \"8 Hearts\", code: \"8h\" },\r\n  { name: \"9 Hearts\", code: \"9h\" },\r\n  { name: \"10 Hearts\", code: \"Th\" },\r\n  { name: \"Jack Hearts\", code: \"Jh\" },\r\n  { name: \"Queen Hearts\", code: \"Qh\" },\r\n  { name: \"King Hearts\", code: \"Kh\" },\r\n  { name: \"Ace Clubs\", code: \"Ac\" },\r\n  { name: \"2 Clubs\", code: \"2c\" },\r\n  { name: \"3 Clubs\", code: \"3c\" },\r\n  { name: \"4 Clubs\", code: \"4c\" },\r\n  { name: \"5 Clubs\", code: \"5c\" },\r\n  { name: \"6 Clubs\", code: \"6c\" },\r\n  { name: \"7 Clubs\", code: \"7c\" },\r\n  { name: \"8 Clubs\", code: \"8c\" },\r\n  { name: \"9 Clubs\", code: \"9c\" },\r\n  { name: \"10 Clubs\", code: \"Tc\" },\r\n  { name: \"Jack Clubs\", code: \"Jc\" },\r\n  { name: \"Queen Clubs\", code: \"Qc\" },\r\n  { name: \"King Clubs\", code: \"Kc\" },\r\n  { name: \"Ace Spades\", code: \"As\" },\r\n  { name: \"2 Spades\", code: \"2s\" },\r\n  { name: \"3 Spades\", code: \"3s\" },\r\n  { name: \"4 Spades\", code: \"4s\" },\r\n  { name: \"5 Spades\", code: \"5s\" },\r\n  { name: \"6 Spades\", code: \"6s\" },\r\n  { name: \"7 Spades\", code: \"7s\" },\r\n  { name: \"8 Spades\", code: \"8s\" },\r\n  { name: \"9 Spades\", code: \"9s\" },\r\n  { name: \"10 Spades\", code: \"Ts\" },\r\n  { name: \"Jack Spades\", code: \"Js\" },\r\n  { name: \"Queen Spades\", code: \"Qs\" },\r\n  { name: \"King Spades\", code: \"Ks\" }\r\n]","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}